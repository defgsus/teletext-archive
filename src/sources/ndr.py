import re
from typing import Dict, Generator, Tuple

from ..scraper import Scraper


class NDR(Scraper):

    NAME = "ndr"

    FILE_EXTENSION = "htm"

    def iter_pages(self) -> Generator[Tuple[int, int, str], None, None]:
        for page_index, num_sub_pages in self._get_pages().items():
            for sub_page_index in range(num_sub_pages):
                url = f"https://www.ndr.de/public/teletext/{page_index}_{sub_page_index+1:02}.htm"
                self.log("requesting", url)
                response = self.session.get(url)
                if response.status_code == 200:
                    yield page_index, sub_page_index+1, response.text

    def _get_pages(self) -> Dict[int, int]:
        text = self.session.get("https://www.ndr.de/public/teletext/pages.js").text
        """
        var pages={100:4,101:1,102:1,103:1,104:1,105:1,106:1,107:1,108:1,109:1,110:1,112:1,113:1,114:1,120:1,121:1,122:1,123:1,124:1,125:1,126:1,127:1,128:1,129:1,140:1,141:1,142:1,143:1,144:1,145:1,146:1,147:1,160:1,161:1,162:1,163:1,164:1,165:1,166:1,167:1,170:1,171:1,172:1,173:1,174:1,175:1,176:1,180:1,181:1,183:1,184:1,185:1,186:1,187:1,188:1,189:1,190:1,191:1,192:1,193:1,194:6,195:6,196:5,198:13,200:1,201:1,202:1,203:1,204:1,205:1,206:1,207:1,208:1,211:1,212:1,213:1,214:1,215:1,216:1,217:1,218:1,219:1,220:1,221:1,222:1,223:1,224:2,225:1,226:1,227:1,228:1,229:1,230:1,231:1,232:1,233:1,234:1,235:1,236:1,237:2,238:1,239:1,240:1,241:2,242:2,243:1,244:2,245:1,246:2,247:1,248:1,249:1,250:1,251:3,252:3,253:4,254:2,255:4,256:4,257:3,258:4,259:4,260:4,261:7,262:8,263:8,264:5,265:4,266:2,267:4,268:6,269:6,270:3,271:4,272:3,273:4,274:3,275:3,276:3,277:5,278:7,279:4,280:4,281:8,282:8,283:8,284:4,285:6,286:3,287:3,288:6,289:3,290:5,291:3,292:4,293:5,294:1,295:2,296:2,297:2,298:4,299:6,300:1,301:1,302:1,303:1,304:1,305:1,306:1,307:1,308:1,309:1,310:1,311:5,312:5,313:5,314:5,315:5,316:5,317:5,318:2,319:2,320:2,321:2,322:2,323:1,325:1,326:1,327:1,328:1,330:1,331:1,332:1,333:1,334:2,335:1,339:3,340:3,341:6,344:1,345:1,346:1,347:1,348:1,349:1,350:1,351:1,352:2,353:1,354:1,355:1,356:1,357:1,358:1,359:2,360:2,361:1,362:1,363:1,364:1,365:1,366:1,367:1,368:1,369:1,370:1,371:1,372:2,373:1,374:1,375:1,376:1,377:2,378:2,379:3,380:2,381:2,382:1,383:1,398:5,399:1,400:1,401:1,402:1,403:1,404:1,405:1,406:2,407:1,408:1,409:1,410:1,411:2,412:1,413:1,414:2,415:1,416:1,417:1,418:1,419:1,420:1,421:1,422:2,423:1,424:1,425:1,426:2,427:1,428:1,429:1,430:2,431:1,432:1,433:2,434:1,435:1,436:2,437:1,438:1,439:15,440:1,441:2,442:2,443:2,444:2,445:2,446:1,447:1,448:2,449:1,450:1,451:1,452:1,453:1,454:1,455:1,460:1,461:1,462:1,463:1,464:1,465:1,466:1,467:1,468:4,469:4,470:4,471:4,472:1,473:6,474:3,475:3,476:3,477:3,478:3,479:3,480:3,481:3,482:3,483:3,484:3,485:3,486:3,487:3,488:3,489:3,490:3,491:3,492:3,493:3,494:3,495:3,496:3,497:3,498:3,500:1,501:1,502:7,503:1,504:4,505:1,506:2,507:2,508:4,510:1,511:3,512:2,513:11,514:4,515:3,516:7,517:6,518:3,519:16,520:1,521:7,522:6,523:4,524:9,525:6,529:1,530:1,531:1,532:2,533:1,534:1,535:1,536:1,537:1,538:1,539:1,540:1,541:3,542:4,543:1,544:2,546:3,547:5,548:3,549:12,550:2,551:1,552:1,553:4,554:1,560:1,561:4,562:18,563:1,564:14,565:8,566:6,567:6,568:6,569:8,570:1,571:8,572:7,577:2,578:4,579:14,580:1,581:11,582:11,590:2,591:6,592:6,593:3,594:5,595:6,596:10,597:5,598:4,600:1,601:1,602:2,603:2,605:1,606:4,607:1,608:1,609:1,610:1,611:1,612:3,613:4,614:2,615:2,616:2,617:3,618:10,630:1,631:1,632:1,633:1,634:1,635:1,637:5,638:4,639:4,645:1,646:1,647:1,648:1,649:1,650:1,651:1,652:1,653:1,654:1,655:1,656:1,657:1,658:2,659:1,660:2,661:1,662:3,663:3,664:2,665:4,666:6,667:1,668:1,669:1,670:2,671:5,672:1,673:1,674:2,675:3,676:3,677:2,678:2,679:1,681:1,682:1,683:3,684:3,685:3,686:3,688:2,689:2,690:1,691:8,692:6,693:3,694:4,695:9,696:6,697:1,698:4,699:6,700:1,701:1,702:1,703:1,704:1,705:1,706:1,707:1,708:1,710:1,711:1,712:1,713:1,715:1,716:1,717:1,720:1,721:1,722:1,725:1,726:1,730:1,731:1,732:1,733:1,734:1,735:1,736:1,737:1,738:1,739:1,745:1,746:1,747:1,748:1,749:1,750:1,751:1,752:1,760:1,761:1,762:1,763:1,764:1,765:1,766:1,767:1,768:1,769:1,770:1,771:1,772:1,773:1,774:1,775:1,776:1,777:1,778:1,779:1,780:1,781:1,782:1,783:1,784:1,785:1,786:1,787:1,788:1,789:1,790:1,791:5,792:8,793:4,794:1,795:1,800:1,801:1,802:1,803:1,804:1,805:1,806:1,807:1,808:1,809:1,810:2,811:1,812:3,813:1,814:1,815:1,816:1,817:1,818:1,819:2,820:1,821:2,822:4,823:2,824:4,825:2,826:2,827:1,828:1,829:1,830:1,831:1,832:1,833:1,834:1,835:1,836:3,837:3,838:3,839:3,840:1,841:1,842:2,843:1,844:1,845:1,846:1,847:1,848:1,849:3,850:3,851:3,852:2,853:3,854:3,855:3,856:3,857:1,858:1,859:3,860:3,861:4,862:2,863:1,864:2,865:1,866:3,867:3,868:3,869:3,870:1,871:1,872:2,873:2,874:2,875:2,876:2,877:5};
        """
        pages = dict()
        for match in re.findall(r"(\d+):(\d+)", text):
            pages[int(match[0])] = int(match[1])

        return pages
